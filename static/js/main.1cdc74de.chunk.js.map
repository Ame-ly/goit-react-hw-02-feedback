{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","App.js","index.js"],"names":["FeedbackOptions","onLeaveFeedback","options","map","option","type","onClick","Section","title","children","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAsBeA,EAnBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,QAApB,OACtB,8BACGA,EAAQC,KAAI,SAAAC,GAAM,OACjB,wBAEEC,KAAK,SACLC,QAAS,kBAAML,EAAgBG,IAHjC,SAKGA,GAJIA,SCJPG,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MAIPF,EAAQG,aAAe,CACrBF,MAAO,IAQMD,QCjBTI,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAvB,IAA8BC,0BAA9B,MAAmD,EAAnD,SACjB,mCAEE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,cAMNL,EAAWD,aAAe,CACxBE,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAWPL,QC9BTM,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KAE1CD,EAAaP,aAAe,CAC1BQ,QAAS,IAOID,QCoDAE,E,4MAzDbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPb,gBAAkB,SAAAG,GAChB,EAAKiB,UAAS,SAAAC,GAAS,sBAAQlB,EAASkB,EAAUlB,GAAU,O,EAG9DmB,mBAAqB,WAEnB,OADeC,OAAOC,OAAO,EAAKL,OACpBM,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAKpDC,gCAAkC,WAEhC,IAAQjB,EAAS,EAAKQ,MAAdR,KACFG,EAAQ,EAAKQ,qBAEnB,OAAQO,KAAKC,MAAOnB,EAAOG,EAAS,M,4CAItC,WACE,MAA+BiB,KAAKZ,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQiB,KAAKT,qBACbP,EAAqBgB,KAAKH,kCAC1B3B,EAAUsB,OAAOS,KAAKD,KAAKZ,OAEjC,OACE,qCACE,cAAC,EAAD,CAASZ,MAAO,wBAAhB,SACE,cAAC,EAAD,CAEEN,QAASA,EACTD,gBAAiB+B,KAAK/B,oBAI1B,cAAC,EAAD,CAASO,MAAM,aAAf,SACGO,EAAQ,EAAI,cAAC,EAAD,CACXH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAEpB,cAAC,EAAD,CAAcE,QAAS,+B,GAnDjBgB,a,MCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1cdc74de.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => (\r\n  <div>\r\n    {options.map(option => (\r\n      <button\r\n        key={option}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback(option)}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n)\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage = 0 }) => (\r\n  <>\r\n\r\n    <ul>\r\n      <li>good: {good}</li>\r\n      <li>neutral: {neutral}</li>\r\n      <li>bad: {bad}</li>\r\n      <li>total: {total}</li>\r\n      <li>POSITIVE FEEDBACK: {positivePercentage}% </li>\r\n    </ul>\r\n\r\n  </>\r\n);\r\n\r\nStatistics.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  total: 0,\r\n  positivePercentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.defaultProps = {\r\n  message: '',\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","// import { render } from '@testing-library/react';\r\nimport React, { Component } from 'react';\r\nimport FeedbackOptions from './Components/FeedbackOptions';\r\nimport Section from './Components/Section';\r\nimport Statistics from './Components/Statistics';\r\nimport Notification from './Components/Notification'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = option => {\r\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const values = Object.values(this.state);\r\n    return values.reduce((acc, value) => acc + value, 0);\r\n    // const { good, neutral, bad } = this.state;\r\n    // return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n\r\n    return (Math.round((good / total) * 100))\r\n\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n    const options = Object.keys(this.state);\r\n\r\n    return (\r\n      <>\r\n        <Section title={\"Please leave feedback\"}>\r\n          <FeedbackOptions\r\n            // options={['good', 'neutral', 'bad']}\r\n            options={options}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {total > 0 ? <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            positivePercentage={positivePercentage}\r\n          /> :\r\n            <Notification message={\"No feedback given\"} />}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}